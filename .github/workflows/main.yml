name: "deploy"

on:
  push:
    branches:
      - "main"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v1
      - name: Authenticate with Dockerhub
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
      - name: Prepare Elixir Environment
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: "1.11"
          otp-version: "24"
      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v1
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Install Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Build Assets
        run: |
          npm --prefix ./assets ci --progress=false --no-audit --loglevel=error
          npm run --prefix ./assets deploy
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Image and Push to Dockerhub
        run: |
          docker buildx build \
          --platform=linux/arm64 \
          --build-arg aws_secret=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          --build-arg aws_key=${{ secrets.AWS_ACCESS_KEY_ID }} \
          --build-arg sendgrid_api_key=${{ secrets.SENDGRID_API_KEY }} \
          --build-arg sentry_dsn=${{ secrets.SENTRY_DSN }} \
          --output "type=image,push=true" \
          --file ./Dockerfile . \
          --tag $(echo "${{ secrets.DOCKERHUB_USERNAME }}" | tr '[:upper:]' '[:lower:]')/z19rpw:latest
      - name: Deploy
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: rollout restart deployment z19rpw
      - name: Mark Deploy (Sentry)
        uses: getsentry/action-release@v1.0.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
      - name: Flush Varnish Cache
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: rollout restart deployment varnish-proxy
