name: "does it blend?"

on: [push]

jobs:
  compile-on-three:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ["1.11.2"]
        otp: ["23.1.2"]

    container: elixir:${{ matrix.elixir }}
    services:
      cockroachdb:
        image: zackkitzmiller/crdb-single-node-server:latest
      memcached:
        image: memcached

    steps:
      - name: git the code
        uses: actions/checkout@v2

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v1
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: burnbabyburn
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix coveralls.github
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST: cockroachdb
          POSTGRES_PORT: "26257"
          MEMCACHED_HOST: memcached
          MIX_ENV: test
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ["1.11.2"]
        otp: ["23.1.2"]

    steps:
      - uses: actions/checkout@v2

      - name: Setup elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }}

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v1
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Check Formatting
        run: mix format --check-formatted

      - name: Check Credo
        run: mix credo list --format oneline
